package ru.job4j.ood.ocp.example1;

/*
 * это пример нарушения принципа OCP(т.к мы никак не сможем расширить взаимодействие клиента
 * и сервера, не меняя класс сервер)
 * Решить это можно так:
 * 1.вынесением функции из класса сервер в интерфейс
 * 2.сделать класс клиент зависимым от интерфейса, а не от его реализации
 * 3.можно расширить функционал при помощи шаблона прокси(создать первую реализацию интерфейса,
 * затем создать вторую и делегировать первой выполнение ее функционала + добавление нового)
 * 4.можно расширить взаимодействие клиента и сервера при помощи шаблона декоратор и тд
 * Таким способом мы сможем сначительно расширить взаимодействие между классами клиент и сервер,
 * при этом не нарушая принцип открытости и закрытости
 */
public class Client {
    public static void main(String[] args) {
        Server server = new Server();
        server.operate();
    }

   static class Server {
        public void operate() {
            System.out.println("происходит идентификация...");
        }
    }
}
